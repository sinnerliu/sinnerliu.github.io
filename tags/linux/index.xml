<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 终点站</title>
    <link>https://blog.gofinall.com/tags/linux/</link>
    <description>Recent content in Linux on 终点站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 21 Nov 2018 19:36:42 +0800</lastBuildDate>
    
	<atom:link href="https://blog.gofinall.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记grep&#43;wc取值在shell中的结果与手动执行结果不一致的坑</title>
      <link>https://blog.gofinall.com/post/shell-grep-wc/</link>
      <pubDate>Wed, 21 Nov 2018 19:36:42 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/shell-grep-wc/</guid>
      <description>&lt;p&gt;有一个shell脚本来备份mysql数据库，crontab每天凌晨2点启动，但是运行一段时间后发现有时候在备份数据库遇到锁表等情况，导致备份一直在等待，在下一次启动后，又在此处等待了；几天后，后台同时有多个备份脚本在执行；于是打算修改下脚本，在执行备份前判断是否有其他备份脚本在执行，有的话则报错退出并告警；&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos给swap扩容</title>
      <link>https://blog.gofinall.com/post/centos-add-swap/</link>
      <pubDate>Thu, 27 Sep 2018 18:31:37 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/centos-add-swap/</guid>
      <description>&lt;h3 id=&#34;swap空间介绍&#34;&gt;swap空间介绍&lt;/h3&gt;

&lt;p&gt;swap分区的用处：swap是当物理内存不够用的时候，把数据放到swap中，所以swap起到了一个虚拟内存的作用，在某种意义上来说也算是加大了内存空间。一般swap分区是在安装系统时设置的，如果安装系统时忘记分swap分区或者分区太小，那也没事，还有补救的方法。下面就讲讲安装完CentOS系统后如何给swap分区扩容。&lt;/p&gt;

&lt;p&gt;场景：
安装完CentOS Linux系统后，安装oracle发下swap大小不够用。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux下使用pmap和ldd查看进程调用了什么lib</title>
      <link>https://blog.gofinall.com/post/linux-pmap-ldd/</link>
      <pubDate>Thu, 12 Jul 2018 16:36:09 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/linux-pmap-ldd/</guid>
      <description>&lt;p&gt;在写安装脚本或者其他时候我们想了解某个经常调用了哪些lib，我们可以使用pmap方法，显示出的lib比较全面，当然也可以使用ldd来查看。接下来看看&lt;a href=&#34;https://blog.gofinall.com/categories/linux/&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;linux&lt;/a&gt;下使用pmap和ldd的命令。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7下rc.local文件开机不执行</title>
      <link>https://blog.gofinall.com/post/centos-rc.local/</link>
      <pubDate>Mon, 09 Jul 2018 11:34:50 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/centos-rc.local/</guid>
      <description>&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;centos7以后rc.local和之前的有不太一样了，centos7默认开机不会执行，需要手工调整；&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RabbitMQ使用分析和高可用集群搭建</title>
      <link>https://blog.gofinall.com/post/rabbitmq/</link>
      <pubDate>Fri, 06 Jul 2018 17:56:00 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/rabbitmq/</guid>
      <description>&lt;h3 id=&#34;rabbitmq-基础理解&#34;&gt;RabbitMQ 基础理解&lt;/h3&gt;

&lt;p&gt;​     RabbitMQ，是一个使用 erlang 编写的 AMQP（高级消息队列协议）的服务实现，简单来说，就是一个功能强大的消息队列服务。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows和Linux利用原生命令查看文件MD5</title>
      <link>https://blog.gofinall.com/post/windows-linux-md5/</link>
      <pubDate>Sat, 23 Jun 2018 15:29:39 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/windows-linux-md5/</guid>
      <description>&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;在网络传输、设备之间转存、复制大文件等时，可能会出现传输前后数据不一致的情况。这种情况在网络这种相对更不稳定的环境中，容易出现。那么校验文件的完整性，也是势在必行的。&lt;/p&gt;

&lt;p&gt;md5sum命令用于生成和校验文件的md5值。它会逐位对文件的内容进行校验。是文件的内容，与文件名无关，也就是文件内容相同，其md5值相同。md5值是一个128位的二进制数据，转换成16进制则是32（128/4）位的进制值。&lt;/p&gt;

&lt;p&gt;md5校验，有很小的概率不同的文件生成的md5可能相同。比md5更安全的校验算法还有SHA*系列的。&lt;/p&gt;

&lt;p&gt;在网络传输时，我们校验源文件获得其md5sum，传输完毕后，校验其目标文件，并对比如果源文件和目标文件md5 一致的话，则表示文件传输无异常。否则说明文件在传输过程中未正确传输。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ssh port forwarding（ssh端口转发）</title>
      <link>https://blog.gofinall.com/post/ssh-port-forwarding/</link>
      <pubDate>Fri, 08 Jun 2018 16:56:41 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/ssh-port-forwarding/</guid>
      <description>&lt;p&gt;SSH的的Port Forward，中文可以称为端口转发，是SSH的一项非常重要的功能。它可以建立一条安全的SSH通道，并把任意的TCP连接放到这条通道中。下面仔细就仔细讨论SSH的这种非常有用的功能。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vsftpd服务器配置虚拟用户</title>
      <link>https://blog.gofinall.com/post/vsftpd-virtul-user/</link>
      <pubDate>Mon, 28 May 2018 17:26:10 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/vsftpd-virtul-user/</guid>
      <description>&lt;h3 id=&#34;vsftpd介绍&#34;&gt;vsftpd介绍&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;VSFTP&lt;/strong&gt;是一个在UNIX/Linux操作系统上运行的FTP服务器，安全性是它的一个最大的特点。它可以运行在诸如Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开发源代码的FTP服务器软件，支持很多其他的FTP服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。&lt;/p&gt;

&lt;p&gt;本文所有配置是在CentOS 5.8-64位系统上进行，配置的是&lt;strong&gt;vsftp虚拟用户模式&lt;/strong&gt;，虚拟用户的特点是只能访问服务器为其提供的FTP服务，而不能访问系统的其它资源。所以，如果想让用户对FTP服务器站内具有写权限，但又不允许访问系统其它资源，可以使用虚拟用户来提高系统的安全性。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将Centos的yum源更换为国内的阿里云源</title>
      <link>https://blog.gofinall.com/post/centos-yum-aliyun/</link>
      <pubDate>Thu, 08 Mar 2018 12:09:12 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/centos-yum-aliyun/</guid>
      <description>&lt;p&gt;由于centos默认的Yum源速度太慢，在使用的时候不方便，于是将yum源改成阿里的源。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux 技巧： 让你的远程会话后台执行</title>
      <link>https://blog.gofinall.com/post/linux%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 24 Jan 2018 14:40:26 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/linux%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;p&gt;你是不是经常需要 SSH 或者 telent 远程登录到 Linux 服务器？你是不是经常为一些长时间运行的任务而头疼，比如系统备份、ftp 传输等等。通常情况下我们都是为每一个这样的任务开一个远程终端窗口，因为他们执行的时间太长了。必须等待它执行完毕，在此期间可不能关掉窗口或者断开连接，否则这个任务就会被杀掉，一切半途而废了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux互信</title>
      <link>https://blog.gofinall.com/post/linux%E4%BA%92%E4%BF%A1/</link>
      <pubDate>Tue, 23 Jan 2018 18:16:24 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/linux%E4%BA%92%E4%BF%A1/</guid>
      <description>&lt;p&gt;配置多台主机之间ssh免密码登录&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux性能监控及收集工具 Nmon</title>
      <link>https://blog.gofinall.com/post/linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%8F%8A%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-nmon/</link>
      <pubDate>Tue, 16 Jan 2018 15:07:48 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/post/linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%8F%8A%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-nmon/</guid>
      <description>&lt;p&gt;Linux性能监控工具 - Nmon安装及简介&lt;/p&gt;

&lt;h3 id=&#34;软件介绍&#34;&gt;软件介绍&lt;/h3&gt;

&lt;p&gt;分析 AIX 和 Linux 性能的免费工具，
这个高效的工具可以工作于任何哑屏幕、telnet 会话、甚至拨号线路。另外，它并不会消耗大量的 CPU 周期，通常低于百分之二。在更新的计算机上，其CPU使用率将低于百分之一。
使用哑屏幕，在屏幕上对数据进行显示，并且每隔两秒钟对其进行更新。然而，您可以很容易地将这个时间间隔更改为更长或更短的时间段。如果您拉伸窗口，并在X Windows、VNC、PuTTY 或类似的窗口中显示这些数据，nmon 工具可以同时输出大量的信息。
nmon 工具还可以将相同的数据捕获到一个文本文件，便于以后对报告进行分析和绘制图形。输出文件采用电子表格的格式 (.csv)。
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>