<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>终点站</title>
    <link>https://blog.gofinall.com/</link>
    <description>Recent content on 终点站</description>
    <generator>Hugo -- gohugo.io</generator>
    
    <language>zh-CN</language>
    
    
    
    
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
        <atom:link href="https://blog.gofinall.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://blog.gofinall.com/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://blog.gofinall.com/about/</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;本站作为博客(typecho)的备用站，等哪天我的博客主机(阿里云)没钱续费了，就直接在这个静态博客上更新了；&lt;/p&gt;

&lt;p&gt;博客主站：&lt;a href=&#34;https://gofinall.com&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://gofinall.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DenyHosts安装配置详解及安装报错处理</title>
      <link>https://blog.gofinall.com/post/denyhosts/</link>
      <pubDate>Mon, 02 Mar 2020 17:19:49 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/denyhosts/</guid>
      <description>&lt;h3 id=&#34;denyhosts-简介&#34;&gt;DenyHosts 简介&lt;/h3&gt;

&lt;p&gt;DenyHosts 是 Python 语言写的一个程序软件，运行于 Linux 上预防 SSH 暴力破解的，它会分析 sshd 的日志文件（/var/log/secure），当发现重复的攻击时就会记录 IP 到/etc/hosts.deny 文件，从而达到自动屏 IP 的功能。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;下载denyhosts&#34;&gt;下载DenyHosts&lt;/h3&gt;

&lt;p&gt;DenyHosts官网：&lt;a href=&#34;http://denyhosts.sourceforge.net&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;http://denyhosts.sourceforge.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最新版本下载地址：&lt;a href=&#34;https://sourceforge.net/projects/denyhosts/files/denyhosts/2.6/&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://sourceforge.net/projects/denyhosts/files/denyhosts/2.6/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;解压并安装&#34;&gt;解压并安装&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装服务器系统：CentOS 7.2&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# 官网下载包安装
[root@tmp ~]# tar zxvf DenyHosts-2.6.tar.gz
[root@tmp ~]# cd DenyHosts-2.6
[root@tmp ~]# DenyHosts-2.6]# python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 进入配置目录
[root@tmp ~]# cd /usr/share/denyhosts/
# 创建配置文件
[root@tmp denyhosts]# cp denyhosts.cfg-dist denyhosts.cfg 
# 修改服务文件名称
[root@tmp denyhosts]# cp daemon-control-dist daemon-control
# 提高安全级别，修改权限
[root@tmp denyhosts]# chown root daemon-control
[root@tmp denyhosts]# chmod 700 daemon-control
[root@tmp denyhosts]# vi denyhosts.cfg
SECURE_LOG = /var/log/secure   #ssh日志文件
# format is: i[dhwmy]
# Where i is an integer (eg. 7)
# m = minutes
# h = hours
# d = days
# w = weeks
# y = years
#
# never purge:
PURGE_DENY = 50m               #过多久后清除已阻止IP
HOSTS_DENY = /etc/hosts.deny   #将阻止IP写入到hosts.deny
BLOCK_SERVICE = sshd           #阻止服务名
PURGE_THRESHOLD =              #定义了某一IP最多被解封多少次。某IP暴力破解SSH密码被阻止/解封达到了PURGE_THRESHOLD次，则会被永久禁止；
DENY_THRESHOLD_INVALID = 1     #允许无效用户登录失败的次数
DENY_THRESHOLD_VALID = 10      #允许普通用户登录失败的次数
DENY_THRESHOLD_ROOT = 5        #允许root登录失败的次数
WORK_DIR = /usr/local/share/denyhosts/data #将deny的host或ip纪录到Work_dir中
DENY_THRESHOLD_RESTRICTED = 1 #设定 deny host 写入到该资料夹
LOCK_FILE = /var/lock/subsys/denyhosts #将DenyHOts启动的pid纪录到LOCK_FILE中，已确保服务正确启动，防止同时启动多个服务。
HOSTNAME_LOOKUP=NO            #是否做域名反解
ADMIN_EMAIL =                 #设置管理员邮件地址
DAEMON_LOG = /var/log/denyhosts #DenyHosts日志位置
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置服务及启动&#34;&gt;配置服务及启动&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建启动服务连接
[root@tmp ~]# ln -s /usr/share/denyhosts/daemon-control /etc/init.d/denyhosts
# 添加启动项
[root@tmp ~]# chkconfig denyhosts on
# 查看启动像是否成功
[root@tmp ~]# chkconfig --list|grep denyhosts
# 启动denyhosts
[root@tmp ~]# service denyhosts start  # 或者 systemctl start denyhosts
# 查看后台进程
[root@tmp ~]# ps -ef|grep denyhosts
root      3098  3865  0 17:35 pts/1    00:00:00 grep --color=auto denyhosts
root     21121     1  0 Feb28 ?        00:00:01 python /usr/bin/denyhosts.py --daemon --config=/usr/share/denyhosts/denyhosts.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;问题排查&#34;&gt;问题排查&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;starting DenyHosts: /usr/bin/env python /usr/bin/denyhosts.py &amp;ndash;daemon &amp;ndash;config=/usr/share/denyhosts/denyhosts.cfg python: can&amp;rsquo;t open file &amp;lsquo;/usr/bin/denyhosts.py&amp;rsquo;: [Errno 2] No such file or directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /usr/share/denyhosts/
vi daemon-control
DENYHOSTS_BIN = &amp;quot;/usr/bin/denyhosts.py&amp;quot;
改为
DENYHOSTS_BIN = &amp;quot;/usr/local/bin/denyhosts.py&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ImportError: No module named DenyHosts.python_version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 下面的python版本视服务器上的版本而定
cp -r /usr/local/lib/python2.7/site-packages/DenyHosts /usr/lib/python2.6/site-packages/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重启即可。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>限制svn提交时必须添加注释</title>
      <link>https://blog.gofinall.com/post/svn-pre-commit/</link>
      <pubDate>Fri, 28 Feb 2020 13:24:39 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/svn-pre-commit/</guid>
      <description>&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;鉴于有些人在提交代码的时候并不写注释，而且没有固定格式，所以准备给svn提交时增加强制注释。&lt;/p&gt;

&lt;p&gt;按照网上的教程只能识别提交日志为纯数字(123)、纯字母(abc)、数字和字母组合(123abc)，但是不能识别中文，按照下面的配置方法可以正确识别中文，如: &lt;code&gt;123abc中文&lt;/code&gt; 识别出来长度为: &lt;code&gt;8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;环境&#34;&gt;环境&lt;/h3&gt;

&lt;p&gt;centos 7&lt;/p&gt;

&lt;p&gt;svn server&lt;/p&gt;

&lt;h3 id=&#34;方法&#34;&gt;方法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进入代码仓库路径下的hooks，&lt;code&gt;cp pre-commit.tmpl pre-commit&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改pre-commit文件如下&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/sh
# 需要添加下面这行，来正确统计中文个数
export LANG=zh_CN.utf-8
# PRE-COMMIT HOOK
#
# The pre-commit hook is invoked before a Subversion txn is
# committed.  Subversion runs this hook by invoking a program
# (script, executable, binary, etc.) named &#39;pre-commit&#39; (for which
# this file is a template), with the following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] TXN-NAME     (the name of the txn about to be committed)
#
#   [STDIN] LOCK-TOKENS ** the lock tokens are passed via STDIN.
#
#   If STDIN contains the line &amp;quot;LOCK-TOKENS:\n&amp;quot; (the &amp;quot;\n&amp;quot; denotes a
#   single newline), the lines following it are the lock tokens for
#   this commit.  The end of the list is marked by a line containing
#   only a newline character.
#
#   Each lock token line consists of a URI-escaped path, followed
#   by the separator character &#39;|&#39;, followed by the lock token string,
#   followed by a newline.
#
# If the hook program exits with success, the txn is committed; but
# if it exits with failure (non-zero), the txn is aborted, no commit
# takes place, and STDERR is returned to the client.   The hook
# program can use the &#39;svnlook&#39; utility to help it examine the txn.
#
#   ***  NOTE: THE HOOK PROGRAM MUST NOT MODIFY THE TXN, EXCEPT  ***
#   ***  FOR REVISION PROPERTIES (like svn:log or svn:author).   ***
#
#   This is why we recommend using the read-only &#39;svnlook&#39; utility.
#   In the future, Subversion may enforce the rule that pre-commit
#   hooks should not modify the versioned data in txns, or else come
#   up with a mechanism to make it safe to do so (by informing the
#   committing client of the changes).  However, right now neither
#   mechanism is implemented, so hook writers just have to be careful.
#
# The default working directory for the invocation is undefined, so
# the program should set one explicitly if it cares.
#                           
# On a Unix system, the normal procedure is to have &#39;pre-commit&#39;
# invoke other programs to do the real work, though it may do the
# work itself too.
#
# Note that &#39;pre-commit&#39; must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# &#39;pre-commit.bat&#39; or &#39;pre-commit.exe&#39;,
# but the basic idea is the same.
#
# The hook program runs in an empty environment, unless the server is
# explicitly configured otherwise.  For example, a common problem is for
# the PATH environment variable to not be set to its usual value, so
# that subprograms fail to launch unless invoked via absolute path.
# If you&#39;re having unexpected problems with a hook program, the
# culprit may be unusual (or missing) environment variables.
#
# CAUTION:
# For security reasons, you MUST always properly quote arguments when
# you use them, as those arguments could contain whitespace or other
# problematic characters. Additionally, you should delimit the list
# of options with &amp;quot;--&amp;quot; before passing the arguments, so malicious
# clients cannot bootleg unexpected options to the commands your
# script aims to execute.
# For similar reasons, you should also add a trailing @ to URLs which
# are passed to SVN commands accepting URLs with peg revisions.
#
# Here is an example hook script, for a Unix /bin/sh interpreter.
# For more examples and pre-written hooks, see those in
# the Subversion repository at
# http://svn.apache.org/repos/asf/subversion/trunk/tools/hook-scripts/ and
# http://svn.apache.org/repos/asf/subversion/trunk/contrib/hook-scripts/


REPOS=&amp;quot;$1&amp;quot;
TXN=&amp;quot;$2&amp;quot;

# Make sure that the log message contains some text.
SVNLOOK=/usr/bin/svnlook
# 提交日志可以为：123、123abc、123abc中文
# 正确识别出来的长度为：3、6、8
# 网上常规配置为：LOGMSG=`$SVNLOOK log -t &amp;quot;$TXN&amp;quot; &amp;quot;$REPOS&amp;quot; | grep &amp;quot;[a-zA-Z0-9]&amp;quot; | wc -c`
# 网上配置不能识别中文，固进行下面的改进
LOGMSG=`$SVNLOOK log -t &amp;quot;$TXN&amp;quot; &amp;quot;$REPOS&amp;quot;`
LOGMSG_LENGTH=`echo ${#LOGMSG}`
# 提交日志长度小于5就不让提交
if [ &amp;quot;$LOGMSG_LENGTH&amp;quot; -lt 5 ];then 
   echo &amp;quot;Failed submission: comments must not be less than 5 characters&amp;quot; 1&amp;gt;&amp;amp;2 
   exit 1
fi
#$SVNLOOK log -t &amp;quot;$TXN&amp;quot; &amp;quot;$REPOS&amp;quot; | \
#   grep &amp;quot;[a-zA-Z0-9]&amp;quot; &amp;gt; /dev/null || exit 1

# Check that the author of this commit has the rights to perform
# the commit on the files and directories being modified.
#commit-access-control.pl &amp;quot;$REPOS&amp;quot; &amp;quot;$TXN&amp;quot; commit-access-control.cfg || exit 1

# All checks passed, so allow the commit.
exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;然后 给pre-commit文件添加755权限：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;  chmod 755 pre-commit 或 chmod +x pre-commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有添加权限， 则会报：&lt;/p&gt;

&lt;p&gt;Commit blocked by pre-commit hook (exit code 255) with no output 错误。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker搭建Svn Server</title>
      <link>https://blog.gofinall.com/post/docker-svn-server/</link>
      <pubDate>Mon, 24 Feb 2020 12:25:31 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/docker-svn-server/</guid>
      <description>&lt;h3 id=&#34;基础环境&#34;&gt;基础环境&lt;/h3&gt;

&lt;p&gt;系统版本: centos-7.6(linux)&lt;/p&gt;

&lt;p&gt;环境依赖: Docker&lt;/p&gt;

&lt;p&gt;系统要求：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;关闭selinux&lt;/li&gt;
&lt;li&gt;防火墙放行80、3690端口(或者关闭防火墙)&lt;/li&gt;
&lt;li&gt;服务器的80和3690端口没有被占用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;拉取镜像&#34;&gt;拉取镜像&lt;/h3&gt;

&lt;p&gt;推荐&lt;code&gt;elleflorio/svn-server&lt;/code&gt;的镜像，包含了http和webui(svnadmin)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker pull elleflorio/svn-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;github地址: &lt;a href=&#34;https://github.com/elleFlorio/svn-docker&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/elleFlorio/svn-docker&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;启动&#34;&gt;启动&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;docker run --name svn-server -d --restart=always -v /home/docker/svn:/home/svn/ -p 80:80  -p 3690:3690 elleflorio/svn-server&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;把容器中的svn目录挂载到物理机的/home/docker/svn&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;创建仓库&#34;&gt;创建仓库&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 进入镜像
docker exec -it svn-server /bin/sh

# 创建仓库名为test_svn的仓库
svnadmin create /home/svn/test_svn

# 在容器中需要修改一下这个目录的权限，因为默认是root创建的仓库，在window端没有权限访问，否则会报错：can&#39;t open file db/txn-current-lock:permission
chmod 777 -R /home/svn/test_svn/db
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;修改权限控制&#34;&gt;修改权限控制&lt;/h3&gt;

&lt;p&gt;镜像默认没有对权限进行控制，修改一下配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;vi /etc/apache2/conf.d/dav_svn.conf
&amp;lt;Location /svn&amp;gt;
     DAV svn
     SVNParentPath /home/svn
     SVNListParentPath On
     AuthType Basic
     AuthName &amp;quot;Subversion Repository&amp;quot;
     AuthUserFile /home/svn/passwd.conf
     AuthzSVNAccessFile /home/svn/auth.conf 
     Require valid-user
&amp;lt;/Location&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重启svn-server容器&lt;/p&gt;

&lt;h3 id=&#34;创建第一个用户&#34;&gt;创建第一个用户&lt;/h3&gt;

&lt;p&gt;在物理机上执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker exec -t svn-server htpasswd -b /home/svn/passwd.conf &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;
# Adding password for user &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;利用webui-svnadmin-配置权限&#34;&gt;利用webui(svnadmin)配置权限&lt;/h3&gt;

&lt;p&gt;the image provides a graphical ui using the &lt;a href=&#34;https://github.com/mfreiholz/iF.SVNAdmin&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;SVNADMIN&lt;/a&gt; interface via &lt;code&gt;http://svnserver-ip/svnadmin&lt;/code&gt;. You&amp;rsquo;ll be prompted with a setup page, remember to test every step on the page then save the configuration.&lt;/p&gt;

&lt;p&gt;浏览器地址输入&lt;code&gt;http://ip/svnadmin&lt;/code&gt;出现配置界面，输入下图中配置信息，输入每个配置信息可以点击旁边的Test测试是否输入正确，最后保存配置&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.gofinall.com/post/images/docker-svn-server.png&#34; alt=&#34;svnadmin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;登陆后我们可以在“Repositories”下“add”，添加项目目录；&lt;/p&gt;

&lt;p&gt;在&amp;rdquo;Users&amp;rdquo;下添加用户；&lt;/p&gt;

&lt;p&gt;在“Access-Paths”下关联对应项目的用户，并分配相关读写权限。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tinc-1.1pre17在linux下的部署</title>
      <link>https://blog.gofinall.com/post/tinc-1/</link>
      <pubDate>Fri, 17 Jan 2020 16:34:44 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/tinc-1/</guid>
      <description>&lt;h3 id=&#34;介绍&#34;&gt;介绍&lt;/h3&gt;

&lt;p&gt;TincV+P+N是一个P2PV+P+N，即两端可以直接通信，虚拟局域网内只需要一台机器（VPS）能够有外网访问的能力即可，一旦两端建立起连接，流量就不会再经过VPS。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;官网&#34;&gt;官网&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.tinc-vpn.org/&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.tinc-vpn.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本次使用1.1pre17 版本部署&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 推荐使用 tinc-pre 1.1 版本
# 配置更方便使用更简单
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载地址：&lt;/p&gt;

&lt;p&gt;linux: &lt;a href=&#34;https://www.tinc-vpn.org/packages/tinc-1.1pre17.tar.gz&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.tinc-vpn.org/packages/tinc-1.1pre17.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Windows XP/Vista/7/8/10: &lt;a href=&#34;https://www.tinc-vpn.org/packages/windows/tinc-1.1pre17-install.exe&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.tinc-vpn.org/packages/windows/tinc-1.1pre17-install.exe&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;部署&#34;&gt;部署&lt;/h3&gt;

&lt;p&gt;本次部署系统环境: &lt;code&gt;centos7&lt;/code&gt;，后面操作均在root下操作；&lt;/p&gt;

&lt;h4 id=&#34;安装编译依赖环境&#34;&gt;安装编译依赖环境&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;yum -y install gcc readline-devel zlib-devel lzo-devel openssl-devel ncurses-devel&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;解压&#34;&gt;解压&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;tar -xvf tinc-1.1pre17.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;编译安装&#34;&gt;编译安装&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd tinc-1.1pre17
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置server&#34;&gt;配置server&lt;/h4&gt;

&lt;p&gt;开放防火墙端口655，方法略，本文的环境已经关闭了防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建pid文件生成路径
mkdir /var/run/
# 创建配置文件路径
mkdir /etc/tinc
# 初始化server，格式: tinc -n 网络名称 init server名
tinc -n vbn init server
# 启动tinc
tincd -n vbn
# 配置tinc的网段
tinc -n vpn add subnet 10.10.1.1
# 配置tinc启动后的网卡
echo &#39;ip addr add 10.10.1.1/24 dev $INTERFACE&#39; &amp;gt; /etc/tinc/vbn/tinc-up
echo &#39;ip link set $INTERFACE up&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc-up
# 配置server的外网ip
echo &#39;Address=服务器的外网ip&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
# 配置加密方式(可选)
echo &#39;Cipher=aes-256-cbc&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
echo &#39;Digest=sha512&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
# 设置广播包发到其他节点的方式, 所有节点需要使用相同的方式, 否则可能会产生路由循环
# no 不发送广播包 
# mst 使用 Minimum Spanning Tree, 保证发往每个节点
# direct 只发送给直接访问的节点, 从其他节点接收到的不转发. 如果设置了 IndirectData, 广播包也会发送给有 meta 链接的节点
# 试验阶段
# no | mst | direct
# 可选
echo &#39;Broadcast = mst&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
# 尝试发现本机网络中的节点
# 允许与本地节点地址建立直接连接
# 目前, 本地发现机制是通过在 UDP 发现阶段发送本地地址的方式
# 可选
echo &#39;LocalDiscovery = yes&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf

# 重启server
pkill -9 tincd
# daemonize方式启动
tincd -n vbn
# debug方式启动
tincd -n vbn -D -d3
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;编译客户端&#34;&gt;编译客户端&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd tinc-1.1pre17
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置客户端&#34;&gt;配置客户端&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建pid文件生成路径
mkdir /var/run/
# 创建配置文件路径
mkdir /etc/tinc
# server服务器上生成邀请连接 tinc -n 网络名称 invite 客户端名称
tinc -n vbn invite client1
# 要求连接 server的外网ip/随机码
222.222.222.222/swgz4VsseZKhF1dsd1LnVp-yfIJ-iVT47u44feu8w3uP7VYQD7It

# 客户端加入server
[root@localhost sbin]# tinc join 222.222.222.222/swgz4VsseZKhF1dsd1LnVp-yfIJ-iVT47u44feu8w3uP7VYQD7It
Connected to 222.222.222.222 port 655...
..................................................................+++ p
....................................................+++ q
Configuration stored in: /etc/tinc/vbn
Invitation successfully accepted.

# 启动tinc
tincd -n vbn
# 配置客户端的ip,需要和server的不一样,可以直接加1即可
tinc -n vbn add subnet 10.10.1.2
# 配置tinc启动后的网卡,下面的ip需要和上一步一样
echo &#39;ip addr add 10.10.1.2/24 dev $INTERFACE&#39; &amp;gt; /etc/tinc/vbn/tinc-up
echo &#39;ip link set $INTERFACE up&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc-up

# 配置加密方式(可选)
echo &#39;Cipher=aes-256-cbc&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
echo &#39;Digest=sha512&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf
# 尝试发现本机网络中的节点
# 允许与本地节点地址建立直接连接
# 目前, 本地发现机制是通过在 UDP 发现阶段发送本地地址的方式
# 可选
echo &#39;LocalDiscovery = yes&#39; &amp;gt;&amp;gt; /etc/tinc/vbn/tinc.conf

# 重启server
pkill -9 tincd
# daemonize方式启动
tincd -n vbn
# debug方式启动
tincd -n vbn -D -d3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装上面方法添加多个客户端，然后相互ping客户端的ip即可&lt;/p&gt;

&lt;p&gt;注意：某个客户端如果配置了&lt;code&gt;Cipher&lt;/code&gt;、&lt;code&gt;Digest&lt;/code&gt;、&lt;code&gt;LocalDiscovery&lt;/code&gt;这三个参数，则其他所有的客户端都需要配置这三个参数，否则会不通。&lt;/p&gt;

&lt;h3 id=&#34;高级玩法&#34;&gt;高级玩法&lt;/h3&gt;

&lt;h4 id=&#34;路由表&#34;&gt;路由表&lt;/h4&gt;

&lt;p&gt;如果某个客户端(10.10.1.2)启用了路由转发，可以在其他客户端的&lt;code&gt;tinc-up&lt;/code&gt;中添加路由配置，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[root@localhost vbn]# more tinc-up 
ip addr add 10.10.1.3/24 dev $INTERFACE
ip link set $INTERFACE up
route add -net 10.1.231.0 netmask 255.255.255.0 gw 10.10.1.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时可以在其他的客户端上直接上10.1.231.x网段的ip了&lt;/p&gt;

&lt;h3 id=&#34;参考文档&#34;&gt;参考文档&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wenerme/wener/blob/master/tricks/ops/network/private/tinc.md&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/wenerme/wener/blob/master/tricks/ops/network/private/tinc.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://nwgat.ninja/quick-easy-tinc-1-1-2/&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://nwgat.ninja/quick-easy-tinc-1-1-2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://lala.im/6209.html&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://lala.im/6209.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 连接时尽量使用 127.0.0.1 而不是 localhost</title>
      <link>https://blog.gofinall.com/post/mysql-localhost/</link>
      <pubDate>Thu, 28 Nov 2019 13:23:54 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/mysql-localhost/</guid>
      <description>&lt;h3 id=&#34;原因&#34;&gt;原因&lt;/h3&gt;

&lt;p&gt;Whenever you specify &amp;ldquo;localhost&amp;rdquo; or &amp;ldquo;localhost:port&amp;rdquo; as server, the MySQL client library will override this and try to connect to a local socket (named pipe on Windows). If you want to use TCP/IP, use &amp;ldquo;127.0.0.1&amp;rdquo; instead of &amp;ldquo;localhost&amp;rdquo;. If the MySQL client library tries to connect to the wrong local socket, you should set the correct path as in your PHP configuration and leave the server field blank.&lt;/p&gt;

&lt;p&gt;localhost 使用的 Linux socket，127.0.0.1 使用的是 tcp/ip&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;为什么我使用-localhost-一直没出问题&#34;&gt;为什么我使用 localhost 一直没出问题&lt;/h3&gt;

&lt;p&gt;因为你的本机中只有一个 mysql 进程， 如果你有一个 node1 运行在 3306， 有一个 node2 运行在 3307&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -h localhost -P 3306
mysql -u root -h localhost -P 3307
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;都会连接到同一个 mysql 进程， 因为 localhost 使用 Linux socket， 所以 -P 字段直接被忽略了， 等价于&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -h localhost 
mysql -u root -h localhost 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而 -h 默认是 localhost， 又等价于&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root 
mysql -u root 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了避免这种情况（比如你在本地开发只有一个 mysql 进程，线上或者 qa 环境有多个 mysql 进程）最好的方式就是使用 IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -h 127.0.0.1 -P 3307
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用localhost地址的strace&#34;&gt;使用localhost地址的strace&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;strace mysql -h localhost -P 3306 -u root &amp;amp;&amp;gt; /tmp/strace_mysql.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;execve(&amp;quot;/opt/app/mysql/bin/mysql&amp;quot;, [&amp;quot;mysql&amp;quot;, &amp;quot;-h&amp;quot;, &amp;quot;localhost&amp;quot;, &amp;quot;-P&amp;quot;, &amp;quot;3306&amp;quot;, &amp;quot;-u&amp;quot;, &amp;quot;root&amp;quot;], [/* 25 vars */]) = 0

......

socket(AF_LOCAL, SOCK_STREAM, 0)        = 3
connect(3, {sa_family=AF_LOCAL, sun_path=&amp;quot;/tmp/mysql.sock&amp;quot;}, 110) = 0 // 这里
setsockopt(3, SOL_TCP, TCP_NODELAY, [1], 4) = -1 EOPNOTSUPP (Operation not supported)
setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用ip地址的strace&#34;&gt;使用ip地址的strace&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;strace mysql -h 127.0.0.1 -P 3306 -u root &amp;amp;&amp;gt; /tmp/strace_mysql_use_ip.txt
execve(&amp;quot;/opt/app/mysql/bin/mysql&amp;quot;, [&amp;quot;mysql&amp;quot;, &amp;quot;-h&amp;quot;, &amp;quot;127.0.0.1&amp;quot;, &amp;quot;-P&amp;quot;, &amp;quot;3306&amp;quot;, &amp;quot;-u&amp;quot;, &amp;quot;root&amp;quot;], [/* 25 vars */]) = 0

....

socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 3
connect(3, {sa_family=AF_INET, sin_port=htons(3306), sin_addr=inet_addr(&amp;quot;127.0.0.1&amp;quot;)}, 16) = 0
setsockopt(3, SOL_TCP, TCP_NODELAY, [1], 4) = 0
setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之前遇到过这个问题，但是没有找到原因，今天看到网友分享了经验，记录下&lt;/p&gt;

&lt;p&gt;转自：&lt;a href=&#34;https://www.v2ex.com/t/623596&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt; https://www.v2ex.com/t/623596 &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mysql出现Could not retrieve transaction read-only status from server报错</title>
      <link>https://blog.gofinall.com/post/mysql-read-only/</link>
      <pubDate>Tue, 10 Sep 2019 15:48:06 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/mysql-read-only/</guid>
      <description>&lt;h3 id=&#34;问题现象&#34;&gt;问题现象&lt;/h3&gt;

&lt;p&gt;mysql在java连接数据库的时候，&lt;code&gt;偶发性&lt;/code&gt;的出现如下错误：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Could not retrieve transaction read-only status from server, nested exception is java.sql. SQLException: Could not retrieve transaction read-only status from server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;解决办法&#34;&gt;解决办法&lt;/h3&gt;

&lt;p&gt;mysql版本：&lt;code&gt;5.7.25&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;mysql jdbc驱动包：mysql-connector-java-5.1.47.jar&lt;/p&gt;

&lt;p&gt;mysql事务类型和java连接数据库的方法不匹配，根据网上搜索到的办法和自己实际使用的办法如下&lt;/p&gt;

&lt;p&gt;1.查看mysql的事物隔离级别  &lt;code&gt;SHOW VARIABLES LIKE &#39;%iso%&#39;;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mysql&amp;gt; SHOW VARIABLES LIKE &#39;%iso%&#39;;
+------------------------+-----------------+
| Variable_name          | Value           |
+------------------------+-----------------+
| transaction_isolation  | REPEATABLE-READ |
| tx_isolation           | REPEATABLE-READ |
+------------------------+-----------------+
2 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.修改mysql事务隔离级别&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mysql&amp;gt; SET GLOBAL tx_isolation=&#39;READ-COMMITTED&#39;; 
Query OK,0 rows affected (0.00 sec)

mysql&amp;gt; SET GLOBAL transaction_isolation=&#39;READ-COMMITTED&#39;; 
Query OK,0 rows affected (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.修改my.cnf，让配置永久生效&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;/etc/my.cnf&lt;/code&gt;(位置可能不一样)的&lt;code&gt;[mysqld]&lt;/code&gt;后面添加&lt;code&gt;transaction_isolation = READ-COMMITTED&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;4.检测事务隔离级别是否生效，第一步执行后几分钟后才能查询到；&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mysql&amp;gt; SHOW VARIABLES LIKE &#39;%iso%&#39;;
+------------------------+-----------------+
| Variable_name          | Value           |
+------------------------+-----------------+
| transaction_isolation  | READ-COMMITTED |
| tx_isolation           | READ-COMMITTED |
+------------------------+-----------------+
2 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;后续问题&#34;&gt;后续问题&lt;/h3&gt;

&lt;p&gt;经过上面的修改，一段时间后还是出现了该问题，偶发出现，尝试方法有两个：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;把驱动包降到5.1.30还是有问题，尝试把驱动包升到mysql-connector-java-8.0.17.jar&lt;/li&gt;
&lt;li&gt;在jdbc串后面加参数：&lt;code&gt;failOverReadOnly=false&lt;/code&gt;  &lt;strong&gt;自动重连成功后，连接是否设置为只读&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过上面两种方式修改后，再观察下。/(ㄒoㄒ)/~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL常用json方法使用记录</title>
      <link>https://blog.gofinall.com/post/mysql-json/</link>
      <pubDate>Wed, 14 Aug 2019 17:15:21 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/mysql-json/</guid>
      <description>&lt;h3 id=&#34;介绍&#34;&gt;介绍&lt;/h3&gt;

&lt;p&gt;Mysql5.7版本以后提供了一个原生的Json类型，Json值将不再以字符串的形式存储，而是采用一种允许快速读取文本元素（document elements）的内部二进制（internal binary）格式。在Json列插入或者更新的时候将会自动验证Json文本，未通过验证的文本将产生一个错误信息。Json文本采用标准的创建方式，可以使用大多数的比较操作符进行比较操作，例如：=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=, &amp;lt;&amp;gt;, != 和 &amp;lt;=&amp;gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;常用使用方法&#34;&gt;常用使用方法&lt;/h3&gt;

&lt;h4 id=&#34;创建有json字段的表&#34;&gt;创建有json字段的表&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;-- 创建表
CREATE TABLE table_json(id INT PRIMARY KEY, sname VARCHAR(20) , info  JSON);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;查询记录&#34;&gt;查询记录&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;-- 查询记录
SELECT sname,JSON_EXTRACT(info,&#39;$.age&#39;) FROM table_json;
SELECT sname,info-&amp;gt;&#39;$.age&#39; FROM table_json;
-- 查询key
SELECT id,json_keys(info) FROM table_json;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;修改记录&#34;&gt;修改记录&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;-- 增加键
UPDATE table_json SET info = json_set(info,&#39;$.ip&#39;,&#39;192.168.1.1&#39;) WHERE id = 2;

-- 变更值
UPDATE table_json SET info = json_set(info,&#39;$.ip&#39;,&#39;192.168.1.2&#39;) WHERE id = 2;

-- 删除键
UPDATE table_json SET info = json_remove(info,&#39;$.ip&#39;) WHERE id = 2;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;插入&#34;&gt;插入&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;UPDATE table_json SET info = JSON_INSERT(info,&#39;$.user-agent&#39;,&#39;chrome&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/ooo0/p/9309277.html&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.cnblogs.com/ooo0/p/9309277.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>又一次长春出差后的感想</title>
      <link>https://blog.gofinall.com/post/changchun-1/</link>
      <pubDate>Tue, 13 Aug 2019 16:42:11 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/changchun-1/</guid>
      <description>&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;又一次长春出差，直达的飞机差不多5小时，本就疲惫不堪，但是下飞机后打出租车更让人心累；&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;经历&#34;&gt;经历&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2014年的时候，去过一次长春，从机场打出租车到市区，出租车司机不按照打表的价格收费，要价150，实际打表的价格在110多点，由于出差，需要发票报销，出租车司机说给定额票，在人家地盘上，我也不敢说啥；&lt;/li&gt;
&lt;li&gt;2015年的时候，又去了一次长春，打出租车照旧喊价，但是不是给的定额票，司机直接从车里拿出另一个‘计价器’，问要好多的票，他们直接用这个‘计价器’打出来；&lt;/li&gt;
&lt;li&gt;2016年的时候，又又去了一次长春，打车还是老规矩，更要命的是去机场的时候，把我和另一个同事直接丢路上，让我们去坐另外的出租车，上车一看，车上已经有两个去机场，然后我们四个大老爷们挤着去了机场，但这次是按照打表给的票；&lt;/li&gt;
&lt;li&gt;前段时间，又又又去了一次长春，上出租车，师傅说打表，心想着这次出租车良心了，但是到了目的地后，打表的价格是160多，记得上次打表才110左右，我也不敢问，给钱拿票走人；&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;感想&#34;&gt;感想&lt;/h3&gt;

&lt;p&gt;出租车是一个城市的门面，尤其是跑机场、火车站，外地人来了接触的第一个本地事物，不应该有喊价、调表(猜测)、强制拼车等行为，给人留下的印象不好；又加上大部分东北爷们脾气暴躁(网传)，又不敢给他们理论，也就只有默默的接受了。&lt;/p&gt;

&lt;h3 id=&#34;建议&#34;&gt;建议&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;网约车：去机场和到市区，可以打网约车，价格是平台订的，相对透明，不坑；&lt;/li&gt;
&lt;li&gt;城际火车：不赶时间的，或者去市中心附近的，可以坐城际火车，价格便宜(10块左右)，时间快(10多分钟)，城际火车大概是1个小时一趟，可以直接在机场下面坐，或者从市中心的火车站坐到机场。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上是个人实际经历，勿怼。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>斐讯N1折腾记1-刷入armbian</title>
      <link>https://blog.gofinall.com/post/feixun-n1-1/</link>
      <pubDate>Tue, 23 Jul 2019 10:26:06 +0800</pubDate>
      <author> 死性不改 </author>
      <guid>https://blog.gofinall.com/post/feixun-n1-1/</guid>
      <description>&lt;h3 id=&#34;n1介绍&#34;&gt;N1介绍&lt;/h3&gt;

&lt;p&gt;斐讯N1原来的定位: NAS和区块链设备，后来斐讯翻车和被很多大神破解，刷入不同的固件，从而让它能实现各种功能，再加上目前低廉的价格，让它的可玩性和性价比都极高。&lt;/p&gt;

&lt;p&gt;如果你不是拿来做开发、需要GPIO开发等一个N1显然更实用，适合普通人的生活需求，树莓派对于开发者比较友好一些。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;硬件配置&#34;&gt;硬件配置&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;N1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CPU&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amlogic S905D, 4-Core Cortex-A53, 1.8Ghz&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;GPU&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Mail-450&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RAM&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2G&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Storage&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8G EMMC&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Network&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;BT4, 802.11 n/ac&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Interface&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;HDMI * 1, USB * 2, 1000M Ethernet * 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;用途&#34;&gt;用途&lt;/h3&gt;

&lt;p&gt;N1的核心功能就是看网络电视，主系统是Android 7，下载电视版APP可以看很多节目、电影等，如果通过刷机可以获得更多功能。刷Linux系统可以获得一台小型服务器，配合内网穿透和DDNS可以当一个低功耗小型服务器。可以作为下载服务器，有专门的下载优化固件，专注下载。N1的接口有: 网线接口、HDMI接口和两个USB2.0接口，需要大量文件传输的话速度比较一般。&lt;/p&gt;

&lt;p&gt;上周从PDD上买入N1，84元，价格还算可以。&lt;/p&gt;

&lt;h3 id=&#34;折腾准备&#34;&gt;折腾准备&lt;/h3&gt;

&lt;h4 id=&#34;环境准备&#34;&gt;环境准备&lt;/h4&gt;

&lt;p&gt;下载好adb相关的工具&lt;/p&gt;

&lt;p&gt;相关工具下载可用&lt;a href=&#34;https://cnone.lty.fun/home/工具库/N1&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://cnone.lty.fun/home/%E5%B7%A5%E5%85%B7%E5%BA%93/N1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;感谢&lt;a href=&#34;https://luotianyi.vc/&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;Luminous&lt;/a&gt;提供和分享相关工具。&lt;/p&gt;

&lt;h4 id=&#34;降级&#34;&gt;降级&lt;/h4&gt;

&lt;p&gt;当n1的系统版本在 V2.19 以上的都必须先降级才能刷机，由于我为了少折腾，直接买的是刷好了yyf的精简固件的，降级教程网上很多，此文章就忽略了。&lt;/p&gt;

&lt;h4 id=&#34;刷入armbian&#34;&gt;刷入armbian&lt;/h4&gt;

&lt;h5 id=&#34;系统选择&#34;&gt;系统选择&lt;/h5&gt;

&lt;p&gt;网上大神制作的N1系统有：debian、ubuntu、centos，参考网上反馈使用的稳定性，最终选择了ubuntu，&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Armbian_5.77_Aml-s905_Ubuntu_bionic_default_5.0.2_20190401.img.xz&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&#34;制作u盘系统&#34;&gt;制作U盘系统&lt;/h5&gt;

&lt;p&gt;本人使用的是闪迪的cz33，听说兼容性好点；&lt;/p&gt;

&lt;p&gt;使用&lt;code&gt;usbit&lt;/code&gt;或者&lt;code&gt;win32diskimager&lt;/code&gt;烧录固件到U盘，本文使用&lt;code&gt;usbit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.gofinall.com/post/images/n1-1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意此操作会格式化U盘&lt;/strong&gt;，将一个8G以上的U盘插入电脑，在左侧选择U盘，然后再点击Restore，然后选择刚才解压出来的.img镜像，一路yes就会开始写入U盘，等着写入结束即可，当写入结束后，&lt;strong&gt;windows系统会弹出一个格式化的提示，此时不要点格式化，否则写入的系统会被清掉&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&#34;修改引导dtb&#34;&gt;修改引导dtb&lt;/h5&gt;

&lt;p&gt;如果不修改dtb，可能会导致系统负载长期在2.0以上。&lt;/p&gt;

&lt;p&gt;刻录完的U盘会有一个可读取分区和一个不可读取分区，进入可读取的那个分区，把&lt;code&gt;meson-gxl-s905d-phicomm-n1-xiangsm.dtb&lt;/code&gt;放到U盘的可读分区的dtb目录下，用&lt;code&gt;Notepad++&lt;/code&gt;编辑uEnv.ini，&lt;strong&gt;切记不可用windows自带的记事本&lt;/strong&gt;，把文件里的dtb_name后面的文件名换成&lt;code&gt;meson-gxl-s905d-phicomm-n1-xiangsm.dtb&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#dtb_name=/dtb/meson-gxm-khadas-vim2.dtb
dtb_name=/dtb/meson-gxl-s905d-phicomm-n1-xiangsm.dtb
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;修改系统可从u盘启动&#34;&gt;修改系统可从U盘启动&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;把盒子插上显示器，查看盒子的ip地址，如：&lt;code&gt;192.168.1.100&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入包含&lt;code&gt;adb.exe&lt;/code&gt;目录，按住&lt;code&gt;shift&lt;/code&gt;然后再点击右键，选择&lt;code&gt;在此处打开PowerShell窗口&lt;/code&gt;，在打开的PowerShell窗口先后运行这两条指令&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\adb.exe connect 192.168.1.100
.\adb.exe shell reboot update
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;执行完成后，看到显示器上盒子已经在重启阶段，迅速把U盘插到靠近hdmi口的usb口(听说这个口兼容性好点，具体未实验)，等待系统重启进入linux系统，&lt;strong&gt;此步骤中，切记不能开着盒子插入U盘，在安卓系统下插入U盘会导致U盘上的文件属组改变，可以等上面的adb命令执行完成后，关闭盒子，再插入U盘，再启动盒子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;初始化系统&#34;&gt;初始化系统&lt;/h5&gt;

&lt;p&gt;如果有键盘，插入另一个usb口，输入登录账号&lt;code&gt;root&lt;/code&gt;，root密码为&lt;code&gt;1234&lt;/code&gt;，登录后提示创建用户，直接&lt;code&gt;ctrl+c&lt;/code&gt;取消即可。&lt;/p&gt;

&lt;p&gt;如果没有键盘，可以用&lt;code&gt;ScanPort.exe&lt;/code&gt;来扫描网段内22端口的ip，或者直接去路由器上查看盒子的ip地址&lt;/p&gt;

&lt;p&gt;如果不需要把系统写入盒子的emmc中，整个过程就结束了&lt;/p&gt;

&lt;p&gt;用putty登录linux，如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.gofinall.com/post/images/n1-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;安装应用&#34;&gt;安装应用&lt;/h3&gt;

&lt;p&gt;可以安装的应用挺多的，现在很多软件都有arm的，如：frp、n2n、php、nginx、docker等，等有空了把我阿里云上的typecho博客迁移到N1上来。&lt;/p&gt;

&lt;p&gt;人生在于折腾。&lt;/p&gt;

&lt;p&gt;参考:&lt;a href=&#34;https://luotianyi.vc/1306.html&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;https://luotianyi.vc/1306.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>